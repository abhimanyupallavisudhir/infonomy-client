# coding: utf-8

"""
    Q&A Platform API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from infonomy_client.models.bot_seller_read import BotSellerRead

class TestBotSellerRead(unittest.TestCase):
    """BotSellerRead unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BotSellerRead:
        """Test BotSellerRead
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BotSellerRead`
        """
        model = BotSellerRead()
        if include_optional:
            return BotSellerRead(
                id = 56,
                type = '',
                matchers = [
                    infonomy_client.models.seller_matcher_read.SellerMatcherRead(
                        id = 56, 
                        seller_id = 56, 
                        keywords = [
                            ''
                            ], 
                        context_pages = [
                            ''
                            ], 
                        min_max_budget = 1.337, 
                        min_inspection_rate = 1.337, 
                        min_purchase_rate = 1.337, 
                        min_priority = 56, 
                        buyer_type = '', 
                        buyer_llm_model = [
                            ''
                            ], 
                        buyer_system_prompt = [
                            ''
                            ], 
                        age_limit = 56, )
                    ],
                user_id = 56,
                info = '',
                price = 1.337,
                llm_model = '',
                llm_prompt = ''
            )
        else:
            return BotSellerRead(
                id = 56,
                type = '',
                matchers = [
                    infonomy_client.models.seller_matcher_read.SellerMatcherRead(
                        id = 56, 
                        seller_id = 56, 
                        keywords = [
                            ''
                            ], 
                        context_pages = [
                            ''
                            ], 
                        min_max_budget = 1.337, 
                        min_inspection_rate = 1.337, 
                        min_purchase_rate = 1.337, 
                        min_priority = 56, 
                        buyer_type = '', 
                        buyer_llm_model = [
                            ''
                            ], 
                        buyer_system_prompt = [
                            ''
                            ], 
                        age_limit = 56, )
                    ],
                user_id = 56,
                info = '',
                price = 1.337,
                llm_model = '',
                llm_prompt = '',
        )
        """

    def testBotSellerRead(self):
        """Test BotSellerRead"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
